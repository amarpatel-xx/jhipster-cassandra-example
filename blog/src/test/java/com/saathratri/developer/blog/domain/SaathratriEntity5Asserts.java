package com.saathratri.developer.blog.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SaathratriEntity5Asserts {

    /**
     * Asserts that the entity has all properties (fields) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSaathratriEntity5AllPropertiesEquals(SaathratriEntity5 expected, SaathratriEntity5 actual) {
        assertSaathratriEntity5AutoGeneratedPropertiesEquals(expected, actual);
        assertSaathratriEntity5AllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSaathratriEntity5AllUpdatablePropertiesEquals(SaathratriEntity5 expected, SaathratriEntity5 actual) {
        assertSaathratriEntity5UpdatableFieldsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSaathratriEntity5AutoGeneratedPropertiesEquals(SaathratriEntity5 expected, SaathratriEntity5 actual) {
        assertThat(expected)
            .as("Verify SaathratriEntity5 auto generated properties")
            .satisfies(e ->
                assertThat(e.getCompositeId().getOrganizationId())
                    .as("check organizationId")
                    .isEqualTo(actual.getCompositeId().getOrganizationId())
            )
            .satisfies(e ->
                assertThat(e.getCompositeId().getEntityType()).as("check entityType").isEqualTo(actual.getCompositeId().getEntityType())
            )
            .satisfies(e ->
                assertThat(e.getCompositeId().getEntityId()).as("check entityId").isEqualTo(actual.getCompositeId().getEntityId())
            )
            .satisfies(e -> assertThat(e.getCompositeId().getAddOnId()).as("check addOnId").isEqualTo(actual.getCompositeId().getAddOnId())
            );
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSaathratriEntity5UpdatableFieldsEquals(SaathratriEntity5 expected, SaathratriEntity5 actual) {
        assertThat(expected)
            .as("Verify SaathratriEntity5 relevant properties")
            .satisfies(e -> assertThat(e.getAddOnType()).as("check addOnType").isEqualTo(actual.getAddOnType()))
            .satisfies(e -> assertThat(e.getAddOnDetailsText()).as("check addOnDetailsText").isEqualTo(actual.getAddOnDetailsText()))
            .satisfies(e ->
                assertThat(e.getAddOnDetailsDecimal())
                    .as("check addOnDetailsDecimal")
                    .containsExactlyEntriesOf(actual.getAddOnDetailsDecimal())
            )
            .satisfies(e ->
                assertThat(e.getAddOnDetailsBoolean()).as("check addOnDetailsBoolean").isEqualTo(actual.getAddOnDetailsBoolean())
            )
            .satisfies(e -> assertThat(e.getAddOnDetailsBigInt()).as("check addOnDetailsBigInt").isEqualTo(actual.getAddOnDetailsBigInt()));
    }
}
